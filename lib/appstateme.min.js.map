{"version":3,"sources":["webpack://appstateme/webpack/universalModuleDefinition","webpack://appstateme/webpack/bootstrap","webpack://appstateme/./src/bindStoreToActions.js","webpack://appstateme/external \"react\"","webpack://appstateme/./src/connect.js","webpack://appstateme/./src/store.js","webpack://appstateme/./src/index.js"],"names":["root","factory","exports","module","require","define","amd","window","__WEBPACK_EXTERNAL_MODULE__1__","installedModules","__webpack_require__","moduleId","i","l","modules","call","m","c","d","name","getter","o","Object","defineProperty","configurable","enumerable","get","r","value","n","__esModule","object","property","prototype","hasOwnProperty","p","s","store","actions","TypeError","Proxy","target","originalMethod","_len","arguments","length","args","Array","_key","concat","set","_react","WrappedComponent","_class","_temp2","boundActions","_bindStoreToActions2","default","_Component","ConnectedComponent","_ref","_temp","_this","_classCallCheck","this","_possibleConstructorReturn","__proto__","getPrototypeOf","apply","state","data","_inherits","Component","_createClass","key","_this2","_unsubscribe","subscribe","newState","setState","_react2","createElement","_extends","props","displayName","getDisplayName","initialState","undefined","Store","_subscriptions","WeakMap","_states","handler","push","unsubscribe","filteredHandlers","filter","handlers","prevState","forEach","h"],"mappings":"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","file":"appstateme.min.js","sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory(require(\"react\"));\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine(\"appstateme\", [\"react\"], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"appstateme\"] = factory(require(\"react\"));\n\telse\n\t\troot[\"appstateme\"] = factory(root[\"react\"]);\n})(window, function(__WEBPACK_EXTERNAL_MODULE__1__) {\nreturn "," \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, {\n \t\t\t\tconfigurable: false,\n \t\t\t\tenumerable: true,\n \t\t\t\tget: getter\n \t\t\t});\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 4);\n","/**\n * Returns a bound action object whose methods always have the\n * store instance as the first param upon invocation.\n *\n * @example\n *  const MyStore = createStore();\n *  const actions = {\n *      addTodo(store, payload) { // some store manipulation },\n *      updateTodo(store, payload) { // some store manipulation },\n *  };\n *  const boundActions = bindStoreToActions(MyStore, actions);\n *\n *  boundActions.addTodo(payload); // `store` param is always `MyStore`\n *  boundActions.updateTodo(payload); // `store` param is always `MyStore`\n *\n * @param {Object} store Store instance\n * @param {Object} actions Action functions map\n * @return {Proxy} A proxy on the actions object.\n */\nexport default function bindStoreToActions(store, actions) {\n    if (!store || !actions) {\n        throw new TypeError('Cannot bind the given store to actions. A valid `store` instance and a map of `actions` functions, are required for binding.');\n    }\n\n    return new Proxy(actions, {\n        get(target, property) {\n            const originalMethod = target[property];\n            return (...args) => originalMethod(store, ...args);\n        },\n        set(target, property, value) {\n            target[property] = value; // eslint-disable-line no-param-reassign\n            return true;\n        },\n    });\n}\n","module.exports = __WEBPACK_EXTERNAL_MODULE__1__;","import React, { Component } from 'react';\nimport bindStoreToActions from './bindStoreToActions';\n\n/**\n * Gets display name of the component.\n *\n * @param  {Component} WrappedComponent     React component\n * @return {String}                         Component name\n */\nconst getDisplayName = WrappedComponent =>\n    WrappedComponent.displayName\n    || WrappedComponent.name\n    || 'Component';\n\n/**\n * Connects the store and actions to the React component.\n *\n * @example\n *     const Comp = connect(store, actions)(MyComponent);\n *\n * @param  {Object} store      Store instance\n * @param  {Object} [actions]  Action functions map\n * @return {Function}          HOC factory function\n */\nconst connect = (store, actions) => (WrappedComponent) => {\n    const boundActions = store && actions ?\n        bindStoreToActions(store, actions) : null;\n\n    return class ConnectedComponent extends Component {\n        static displayName = `HOC(${getDisplayName(WrappedComponent)})`;\n\n        state = { data: store.state };\n\n        componentDidMount() {\n            this._unsubscribe = store.subscribe(newState =>\n                this.setState({ data: newState }));\n\n            // handle cases where values could\n            // have changed between render and mount\n            if (this.state.data !== store.state) {\n                this.setState({ data: store.state });\n            }\n        }\n\n        componentWillUnmount() {\n            // remove subscription\n            this._unsubscribe();\n        }\n\n        render() {\n            return (\n                <WrappedComponent\n                    actions={boundActions}\n                    {...this.props}\n                    {...this.state.data}\n                />\n            );\n        }\n    };\n};\n\nexport default connect;\n","// hold all subscriptions\nconst _subscriptions = new WeakMap();\n// hold all state trees\nconst _states = new WeakMap();\n\n/**\n * Store class to manage state and subscriptions.\n *\n * @example\n *     const store = new Store({value: 1});\n *     const handler = () => console.log('handler invoked');\n *\n *     store.subscribe(handler);\n *     store.state = { value: 2 };\n *     // logs ->\n *     // handler invoked\n *\n *     const log = (...args) => console.log(...args);\n *     store.subscribe(log);\n *     store.state = {\n *         ...store.state,\n *         anotherValue: 10\n *     };\n *     // logs ->\n *     // handler invoked\n *     // {value:2, anotherValue: 10}, {value: 2}, store instance\n *\n *     store.unsubscribe(handler);\n *     store.state = {\n *         ...store.state,\n *         anotherValue: 50\n *     };\n *     // logs ->\n *     // {value:2, anotherValue: 50}, {value:2, anotherValue: 10}, store instance\n */\nexport class Store {\n    /**\n     * Store constructor.\n     *\n     * @param  {Object} initialState    Initial state\n     */\n    constructor(initialState = {}) {\n        _subscriptions.set(this, []);\n        _states.set(this, initialState);\n    }\n\n    /**\n     * Getter for the state.\n     *\n     * @return {Object} The current state of the store\n     */\n    get state() {\n        return _states.get(this);\n    }\n\n    /**\n     * Setter for the store.\n     * Also invokes the handlers after setting the state.\n     *\n     * @param  {Object} newState    Updated state of the store.\n     */\n    set state(newState) {\n        const handlers = _subscriptions.get(this);\n        const prevState = _states.get(this);\n\n        // set the new state\n        _states.set(this, newState);\n        // invoke the registered handlers\n        handlers.forEach(h => h(newState, prevState, this));\n    }\n\n    /**\n     * Add a subscription to the store.\n     *\n     * @param  {Function} handler   Function to invoke\n     * @return {Function}           Function to unsubscribe\n     */\n    subscribe(handler) {\n        if (typeof handler === 'function') {\n            const subscriptions = _subscriptions.get(this);\n            subscriptions.push(handler);\n        }\n        // return function to unsubscribe\n        return () => this.unsubscribe(handler);\n    }\n\n    /**\n     * Removes the previously added subscription from the store.\n     *\n     * @param  {Function} handler   Previously added handler function\n     */\n    unsubscribe(handler) {\n        if (!handler || typeof handler !== 'function') return;\n\n        const subscriptions = _subscriptions.get(this);\n        const filteredHandlers = subscriptions.filter(s => s !== handler);\n\n        _subscriptions.set(this, filteredHandlers);\n    }\n\n    /**\n     * Removes all subscriptions from the store.\n     */\n    unsubscribeAll() {\n        _subscriptions.set(this, []);\n    }\n}\n\n/**\n * Creates a new store instance with the provided\n * defaults to manage state and subscriptions.\n *\n * @example\n *     const store = createStore({value: 1});\n *     const handler = () => console.log('handler invoked');\n *\n *     store.subscribe(handler);\n *     store.state = { value: 2 };\n *     // logs ->\n *     // handler invoked\n *\n *     const log = (...args) => console.log(...args);\n *     store.subscribe(log);\n *     store.state = {\n *         ...store.state,\n *         anotherValue: 10\n *     };\n *     // logs ->\n *     // handler invoked\n *     // {value:2, anotherValue: 10}, {value: 2}, store instance\n *\n *     store.unsubscribe(handler);\n *     store.state = {\n *         ...store.state,\n *         anotherValue: 50\n *     };\n *     // logs ->\n *     // {value:2, anotherValue: 50}, {value:2, anotherValue: 10}, store instance\n */\nexport default function createStore(initialState = {}) {\n    return new Store(initialState);\n}\n","export { default as createStore } from './store';\nexport { default as connect } from './connect';\nexport { default as bindStoreToActions } from './bindStoreToActions';\n"],"sourceRoot":""}