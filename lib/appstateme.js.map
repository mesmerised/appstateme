{"version":3,"sources":["webpack://appstateme/webpack/universalModuleDefinition","webpack://appstateme/webpack/bootstrap","webpack://appstateme/./src/index.js","webpack://appstateme/./src/store.js","webpack://appstateme/./src/connect.js","webpack://appstateme/external \"react\"","webpack://appstateme/./src/bindStoreToActions.js"],"names":["default","createStore","_subscriptions","WeakMap","_states","Store","initialState","set","handler","subscriptions","get","push","unsubscribe","filteredHandlers","filter","s","newState","handlers","prevState","forEach","h","getDisplayName","WrappedComponent","displayName","name","connect","store","actions","boundActions","state","data","_unsubscribe","subscribe","setState","props","Component","bindStoreToActions","TypeError","Proxy","target","property","originalMethod","args","value"],"mappings":"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","file":"appstateme.js","sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory(require(\"react\"));\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine(\"appstateme\", [\"react\"], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"appstateme\"] = factory(require(\"react\"));\n\telse\n\t\troot[\"appstateme\"] = factory(root[\"react\"]);\n})(window, function(__WEBPACK_EXTERNAL_MODULE__3__) {\nreturn "," \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, {\n \t\t\t\tconfigurable: false,\n \t\t\t\tenumerable: true,\n \t\t\t\tget: getter\n \t\t\t});\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 0);\n","export { default as createStore } from './store';\nexport { default as connect } from './connect';\nexport { default as bindStoreToActions } from './bindStoreToActions';\n","// hold all subscriptions\nconst _subscriptions = new WeakMap();\n// hold all state trees\nconst _states = new WeakMap();\n\n/**\n * Store class to manage state and subscriptions.\n *\n * @example\n *     const store = new Store({value: 1});\n *     const handler = () => console.log('handler invoked');\n *\n *     store.subscribe(handler);\n *     store.state = { value: 2 };\n *     // logs ->\n *     // handler invoked\n *\n *     const log = (...args) => console.log(...args);\n *     store.subscribe(log);\n *     store.state = {\n *         ...store.state,\n *         anotherValue: 10\n *     };\n *     // logs ->\n *     // handler invoked\n *     // {value:2, anotherValue: 10}, {value: 2}, store instance\n *\n *     store.unsubscribe(handler);\n *     store.state = {\n *         ...store.state,\n *         anotherValue: 50\n *     };\n *     // logs ->\n *     // {value:2, anotherValue: 50}, {value:2, anotherValue: 10}, store instance\n */\nexport class Store {\n    /**\n     * Store constructor.\n     *\n     * @param  {Object} initialState    Initial state\n     */\n    constructor(initialState = {}) {\n        _subscriptions.set(this, []);\n        _states.set(this, initialState);\n    }\n\n    /**\n     * Getter for the state.\n     *\n     * @return {Object} The current state of the store\n     */\n    get state() {\n        return _states.get(this);\n    }\n\n    /**\n     * Setter for the store.\n     * Also invokes the handlers after setting the state.\n     *\n     * @param  {Object} newState    Updated state of the store.\n     */\n    set state(newState) {\n        const handlers = _subscriptions.get(this);\n        const prevState = _states.get(this);\n\n        // set the new state\n        _states.set(this, newState);\n        // invoke the registered handlers\n        handlers.forEach(h => h(newState, prevState, this));\n    }\n\n    /**\n     * Add a subscription to the store.\n     *\n     * @param  {Function} handler   Function to invoke\n     * @return {Function}           Function to unsubscribe\n     */\n    subscribe(handler) {\n        if (typeof handler === 'function') {\n            const subscriptions = _subscriptions.get(this);\n            subscriptions.push(handler);\n        }\n        // return function to unsubscribe\n        return () => this.unsubscribe(handler);\n    }\n\n    /**\n     * Removes the previously added subscription from the store.\n     *\n     * @param  {Function} handler   Previously added handler function\n     */\n    unsubscribe(handler) {\n        if (!handler || typeof handler !== 'function') return;\n\n        const subscriptions = _subscriptions.get(this);\n        const filteredHandlers = subscriptions.filter(s => s !== handler);\n\n        _subscriptions.set(this, filteredHandlers);\n    }\n\n    /**\n     * Removes all subscriptions from the store.\n     */\n    unsubscribeAll() {\n        _subscriptions.set(this, []);\n    }\n}\n\n/**\n * Creates a new store instance with the provided\n * defaults to manage state and subscriptions.\n *\n * @example\n *     const store = createStore({value: 1});\n *     const handler = () => console.log('handler invoked');\n *\n *     store.subscribe(handler);\n *     store.state = { value: 2 };\n *     // logs ->\n *     // handler invoked\n *\n *     const log = (...args) => console.log(...args);\n *     store.subscribe(log);\n *     store.state = {\n *         ...store.state,\n *         anotherValue: 10\n *     };\n *     // logs ->\n *     // handler invoked\n *     // {value:2, anotherValue: 10}, {value: 2}, store instance\n *\n *     store.unsubscribe(handler);\n *     store.state = {\n *         ...store.state,\n *         anotherValue: 50\n *     };\n *     // logs ->\n *     // {value:2, anotherValue: 50}, {value:2, anotherValue: 10}, store instance\n */\nexport default function createStore(initialState = {}) {\n    return new Store(initialState);\n}\n","import React, { Component } from 'react';\nimport bindStoreToActions from './bindStoreToActions';\n\n/**\n * Gets display name of the component.\n *\n * @param  {Component} WrappedComponent     React component\n * @return {String}                         Component name\n */\nconst getDisplayName = WrappedComponent =>\n    WrappedComponent.displayName\n    || WrappedComponent.name\n    || 'Component';\n\n/**\n * Connects the store and actions to the React component.\n *\n * @example\n *     const Comp = connect(store, actions)(MyComponent);\n *\n * @param  {Object} store      Store instance\n * @param  {Object} [actions]  Action functions map\n * @return {Function}          HOC factory function\n */\nconst connect = (store, actions) => (WrappedComponent) => {\n    const boundActions = store && actions ?\n        bindStoreToActions(store, actions) : null;\n\n    return class ConnectedComponent extends Component {\n        static displayName = `HOC(${getDisplayName(WrappedComponent)})`;\n\n        state = { data: store.state };\n\n        componentDidMount() {\n            this._unsubscribe = store.subscribe(newState =>\n                this.setState({ data: newState }));\n\n            // handle cases where values could\n            // have changed between render and mount\n            if (this.state.data !== store.state) {\n                this.setState({ data: store.state });\n            }\n        }\n\n        componentWillUnmount() {\n            // remove subscription\n            this._unsubscribe();\n        }\n\n        render() {\n            return (\n                <WrappedComponent\n                    actions={boundActions}\n                    {...this.props}\n                    {...this.state.data}\n                />\n            );\n        }\n    };\n};\n\nexport default connect;\n","module.exports = __WEBPACK_EXTERNAL_MODULE__3__;","/**\n * Returns a bound action object whose methods always have the\n * store instance as the first param upon invocation.\n *\n * @example\n *  const MyStore = createStore();\n *  const actions = {\n *      addTodo(store, payload) { // some store manipulation },\n *      updateTodo(store, payload) { // some store manipulation },\n *  };\n *  const boundActions = bindStoreToActions(MyStore, actions);\n *\n *  boundActions.addTodo(payload); // `store` param is always `MyStore`\n *  boundActions.updateTodo(payload); // `store` param is always `MyStore`\n *\n * @param {Object} store Store instance\n * @param {Object} actions Action functions map\n * @return {Proxy} A proxy on the actions object.\n */\nexport default function bindStoreToActions(store, actions) {\n    if (!store || !actions) {\n        throw new TypeError('Cannot bind the given store to actions. A valid `store` instance and a map of `actions` functions, are required for binding.');\n    }\n\n    return new Proxy(actions, {\n        get(target, property) {\n            const originalMethod = target[property];\n            return (...args) => originalMethod(store, ...args);\n        },\n        set(target, property, value) {\n            target[property] = value; // eslint-disable-line no-param-reassign\n            return true;\n        },\n    });\n}\n"],"sourceRoot":""}